$date
	Fri Jun 02 16:01:46 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module main $end
$var wire 32 ! writedataR [31:0] $end
$var wire 3 " tipo [2:0] $end
$var wire 5 # rs2 [4:0] $end
$var wire 5 $ rs1 [4:0] $end
$var wire 1 % regiwrite $end
$var wire 32 & reg9 [31:0] $end
$var wire 32 ' reg8 [31:0] $end
$var wire 32 ( reg7 [31:0] $end
$var wire 32 ) reg6 [31:0] $end
$var wire 32 * reg5 [31:0] $end
$var wire 32 + reg4 [31:0] $end
$var wire 32 , reg31 [31:0] $end
$var wire 32 - reg30 [31:0] $end
$var wire 32 . reg3 [31:0] $end
$var wire 32 / reg29 [31:0] $end
$var wire 32 0 reg28 [31:0] $end
$var wire 32 1 reg27 [31:0] $end
$var wire 32 2 reg26 [31:0] $end
$var wire 32 3 reg25 [31:0] $end
$var wire 32 4 reg24 [31:0] $end
$var wire 32 5 reg23 [31:0] $end
$var wire 32 6 reg22 [31:0] $end
$var wire 32 7 reg21 [31:0] $end
$var wire 32 8 reg20 [31:0] $end
$var wire 32 9 reg2 [31:0] $end
$var wire 32 : reg19 [31:0] $end
$var wire 32 ; reg18 [31:0] $end
$var wire 32 < reg17 [31:0] $end
$var wire 32 = reg16 [31:0] $end
$var wire 32 > reg15 [31:0] $end
$var wire 32 ? reg14 [31:0] $end
$var wire 32 @ reg13 [31:0] $end
$var wire 32 A reg12 [31:0] $end
$var wire 32 B reg11 [31:0] $end
$var wire 32 C reg10 [31:0] $end
$var wire 32 D reg1 [31:0] $end
$var wire 32 E reg0 [31:0] $end
$var wire 32 F reddataM [31:0] $end
$var wire 32 G readdata2R [31:0] $end
$var wire 32 H readdata1R [31:0] $end
$var wire 5 I rd [4:0] $end
$var wire 1 J pcsrc $end
$var wire 7 K opcode [6:0] $end
$var wire 1 L memwrite $end
$var wire 1 M memtoreg $end
$var wire 1 N memread $end
$var wire 32 O mem9 [31:0] $end
$var wire 32 P mem8 [31:0] $end
$var wire 32 Q mem7 [31:0] $end
$var wire 32 R mem6 [31:0] $end
$var wire 32 S mem5 [31:0] $end
$var wire 32 T mem4 [31:0] $end
$var wire 32 U mem31 [31:0] $end
$var wire 32 V mem30 [31:0] $end
$var wire 32 W mem3 [31:0] $end
$var wire 32 X mem29 [31:0] $end
$var wire 32 Y mem28 [31:0] $end
$var wire 32 Z mem27 [31:0] $end
$var wire 32 [ mem26 [31:0] $end
$var wire 32 \ mem25 [31:0] $end
$var wire 32 ] mem24 [31:0] $end
$var wire 32 ^ mem23 [31:0] $end
$var wire 32 _ mem22 [31:0] $end
$var wire 32 ` mem21 [31:0] $end
$var wire 32 a mem20 [31:0] $end
$var wire 32 b mem2 [31:0] $end
$var wire 32 c mem19 [31:0] $end
$var wire 32 d mem18 [31:0] $end
$var wire 32 e mem17 [31:0] $end
$var wire 32 f mem16 [31:0] $end
$var wire 32 g mem15 [31:0] $end
$var wire 32 h mem14 [31:0] $end
$var wire 32 i mem13 [31:0] $end
$var wire 32 j mem12 [31:0] $end
$var wire 32 k mem11 [31:0] $end
$var wire 32 l mem10 [31:0] $end
$var wire 32 m mem1 [31:0] $end
$var wire 32 n mem0 [31:0] $end
$var wire 32 o instrucao [31:0] $end
$var wire 12 p immediate [11:0] $end
$var wire 7 q funct7 [6:0] $end
$var wire 3 r funct3 [2:0] $end
$var wire 1 s clk $end
$var wire 1 t branch $end
$var wire 1 u alusrc $end
$var wire 32 v aluresult2 [31:0] $end
$var wire 1 w aluresult1 $end
$var wire 4 x alucontrol [3:0] $end
$var wire 32 y PC [31:0] $end
$var reg 4 z estado [3:0] $end
$scope module alu $end
$var wire 4 { estado [3:0] $end
$var wire 1 J pcsrc $end
$var wire 32 | readdata2R [31:0] $end
$var wire 32 } readdata1R [31:0] $end
$var wire 12 ~ immediate [11:0] $end
$var wire 1 s clk $end
$var wire 1 t branch $end
$var wire 1 u alusrc $end
$var wire 4 !" alucontrol [3:0] $end
$var reg 1 w aluresult1 $end
$var reg 32 "" aluresult2 [31:0] $end
$upscope $end
$scope module clock $end
$var reg 1 s clk $end
$upscope $end
$scope module decodificacao $end
$var wire 1 s clk $end
$var wire 4 #" estado [3:0] $end
$var wire 32 $" instrucao [31:0] $end
$var reg 3 %" funct3 [2:0] $end
$var reg 7 &" funct7 [6:0] $end
$var reg 12 '" immediate [11:0] $end
$var reg 7 (" opcode [6:0] $end
$var reg 5 )" rd [4:0] $end
$var reg 5 *" rs1 [4:0] $end
$var reg 5 +" rs2 [4:0] $end
$var reg 3 ," tipo [2:0] $end
$upscope $end
$scope module lerinstrucao $end
$var wire 1 s clk $end
$var wire 4 -" estado [3:0] $end
$var wire 32 ." PC [31:0] $end
$var reg 32 /" instrucao [31:0] $end
$upscope $end
$scope module memoria $end
$var wire 32 0" aluresult2 [31:0] $end
$var wire 1 s clk $end
$var wire 4 1" estado [3:0] $end
$var wire 12 2" immediate [11:0] $end
$var wire 32 3" readdata2R [31:0] $end
$var wire 1 L memwrite $end
$var wire 1 N memread $end
$var reg 32 4" mem0 [31:0] $end
$var reg 32 5" mem1 [31:0] $end
$var reg 32 6" mem10 [31:0] $end
$var reg 32 7" mem11 [31:0] $end
$var reg 32 8" mem12 [31:0] $end
$var reg 32 9" mem13 [31:0] $end
$var reg 32 :" mem14 [31:0] $end
$var reg 32 ;" mem15 [31:0] $end
$var reg 32 <" mem16 [31:0] $end
$var reg 32 =" mem17 [31:0] $end
$var reg 32 >" mem18 [31:0] $end
$var reg 32 ?" mem19 [31:0] $end
$var reg 32 @" mem2 [31:0] $end
$var reg 32 A" mem20 [31:0] $end
$var reg 32 B" mem21 [31:0] $end
$var reg 32 C" mem22 [31:0] $end
$var reg 32 D" mem23 [31:0] $end
$var reg 32 E" mem24 [31:0] $end
$var reg 32 F" mem25 [31:0] $end
$var reg 32 G" mem26 [31:0] $end
$var reg 32 H" mem27 [31:0] $end
$var reg 32 I" mem28 [31:0] $end
$var reg 32 J" mem29 [31:0] $end
$var reg 32 K" mem3 [31:0] $end
$var reg 32 L" mem30 [31:0] $end
$var reg 32 M" mem31 [31:0] $end
$var reg 32 N" mem4 [31:0] $end
$var reg 32 O" mem5 [31:0] $end
$var reg 32 P" mem6 [31:0] $end
$var reg 32 Q" mem7 [31:0] $end
$var reg 32 R" mem8 [31:0] $end
$var reg 32 S" mem9 [31:0] $end
$var reg 32 T" reddataM [31:0] $end
$var reg 32 U" writedataR [31:0] $end
$upscope $end
$scope module registradores $end
$var wire 1 s clk $end
$var wire 4 V" estado [3:0] $end
$var wire 5 W" rd [4:0] $end
$var wire 32 X" readdata1R [31:0] $end
$var wire 32 Y" readdata2R [31:0] $end
$var wire 32 Z" reddataM [31:0] $end
$var wire 5 [" rs1 [4:0] $end
$var wire 5 \" rs2 [4:0] $end
$var wire 32 ]" writedataR [31:0] $end
$var wire 1 % regiwrite $end
$var wire 1 M memtoreg $end
$var reg 32 ^" reg0 [31:0] $end
$var reg 32 _" reg1 [31:0] $end
$var reg 32 `" reg10 [31:0] $end
$var reg 32 a" reg11 [31:0] $end
$var reg 32 b" reg12 [31:0] $end
$var reg 32 c" reg13 [31:0] $end
$var reg 32 d" reg14 [31:0] $end
$var reg 32 e" reg15 [31:0] $end
$var reg 32 f" reg16 [31:0] $end
$var reg 32 g" reg17 [31:0] $end
$var reg 32 h" reg18 [31:0] $end
$var reg 32 i" reg19 [31:0] $end
$var reg 32 j" reg2 [31:0] $end
$var reg 32 k" reg20 [31:0] $end
$var reg 32 l" reg21 [31:0] $end
$var reg 32 m" reg22 [31:0] $end
$var reg 32 n" reg23 [31:0] $end
$var reg 32 o" reg24 [31:0] $end
$var reg 32 p" reg25 [31:0] $end
$var reg 32 q" reg26 [31:0] $end
$var reg 32 r" reg27 [31:0] $end
$var reg 32 s" reg28 [31:0] $end
$var reg 32 t" reg29 [31:0] $end
$var reg 32 u" reg3 [31:0] $end
$var reg 32 v" reg30 [31:0] $end
$var reg 32 w" reg31 [31:0] $end
$var reg 32 x" reg4 [31:0] $end
$var reg 32 y" reg5 [31:0] $end
$var reg 32 z" reg6 [31:0] $end
$var reg 32 {" reg7 [31:0] $end
$var reg 32 |" reg8 [31:0] $end
$var reg 32 }" reg9 [31:0] $end
$upscope $end
$scope module sinaisdecontrole $end
$var wire 1 s clk $end
$var wire 4 ~" estado [3:0] $end
$var wire 3 !# funct3 [2:0] $end
$var wire 7 "# funct7 [6:0] $end
$var wire 3 ## tipo [2:0] $end
$var reg 4 $# alucontrol [3:0] $end
$var reg 2 %# aluop [1:0] $end
$var reg 1 u alusrc $end
$var reg 1 t branch $end
$var reg 1 N memread $end
$var reg 1 M memtoreg $end
$var reg 1 L memwrite $end
$var reg 1 % regiwrite $end
$upscope $end
$scope module somapc $end
$var wire 1 s clk $end
$var wire 4 &# estado [3:0] $end
$var wire 12 '# immediate [11:0] $end
$var wire 1 J pcsrc $end
$var reg 32 (# PC [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 (#
bx '#
b0 &#
bx %#
bx $#
bx ##
bx "#
bx !#
b0 ~"
b0 }"
b111111111111 |"
b0 {"
b0 z"
b0 y"
b0 x"
b0 w"
b0 v"
b0 u"
b0 t"
b0 s"
b0 r"
b0 q"
b0 p"
b0 o"
b0 n"
b0 m"
b0 l"
b0 k"
b111 j"
b0 i"
b0 h"
b0 g"
b0 f"
b0 e"
b0 d"
b0 c"
b0 b"
b0 a"
b0 `"
b0 _"
b0 ^"
bx ]"
bx \"
bx ["
bx Z"
bx Y"
bx X"
bx W"
b0 V"
bx U"
bx T"
b0 S"
b0 R"
b0 Q"
b0 P"
b0 O"
b0 N"
b0 M"
b0 L"
b0 K"
b0 J"
b0 I"
b0 H"
b0 G"
b0 F"
b0 E"
b0 D"
b0 C"
b0 B"
b0 A"
b0 @"
b0 ?"
b0 >"
b0 ="
b0 <"
b0 ;"
b0 :"
b0 9"
b0 8"
b0 7"
b0 6"
b0 5"
b1 4"
bx 3"
bx 2"
b0 1"
bx 0"
bx /"
b0 ."
b0 -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
b0 #"
bx ""
bx !"
bx ~
bx }
bx |
b0 {
b0 z
b0 y
bx x
xw
bx v
xu
xt
0s
bx r
bx q
bx p
bx o
b1 n
b0 m
b0 l
b0 k
b0 j
b0 i
b0 h
b0 g
b0 f
b0 e
b0 d
b0 c
b0 b
b0 a
b0 `
b0 _
b0 ^
b0 ]
b0 \
b0 [
b0 Z
b0 Y
b0 X
b0 W
b0 V
b0 U
b0 T
b0 S
b0 R
b0 Q
b0 P
b0 O
xN
xM
xL
bx K
xJ
bx I
bx H
bx G
bx F
b0 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b111 9
b0 8
b0 7
b0 6
b0 5
b0 4
b0 3
b0 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
b111111111111 '
b0 &
x%
bx $
bx #
bx "
bx !
$end
#1
b1010000000000011 o
b1010000000000011 $"
b1010000000000011 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#3
0s
#5
b10 z
b10 {
b10 #"
b10 -"
b10 1"
b10 V"
b10 ~"
b10 &#
b0 "
b0 ,"
b0 ##
b0 p
b0 ~
b0 '"
b0 2"
b0 '#
b10 r
b10 %"
b10 !#
b0 H
b0 }
b0 X"
b1 $
b1 *"
b1 ["
b0 I
b0 )"
b0 W"
1s
#7
0s
#9
0J
1u
1M
0t
b10 x
b10 !"
b10 $#
b101 z
b101 {
b101 #"
b101 -"
b101 1"
b101 V"
b101 ~"
b101 &#
1s
#11
0s
#13
b1111 z
b1111 {
b1111 #"
b1111 -"
b1111 1"
b1111 V"
b1111 ~"
b1111 &#
0w
b0 v
b0 ""
b0 0"
1s
#15
0s
#17
1N
0L
1%
b11 z
b11 {
b11 #"
b11 -"
b11 1"
b11 V"
b11 ~"
b11 &#
1s
#19
0s
#21
b100 z
b100 {
b100 #"
b100 -"
b100 1"
b100 V"
b100 ~"
b100 &#
b0 !
b0 U"
b0 ]"
b1 F
b1 T"
b1 Z"
1s
#23
0s
#25
b110 z
b110 {
b110 #"
b110 -"
b110 1"
b110 V"
b110 ~"
b110 &#
1s
#27
0s
#29
b111 z
b111 {
b111 #"
b111 -"
b111 1"
b111 V"
b111 ~"
b111 &#
1s
#31
0s
#33
b1 E
b1 ^"
b1000 z
b1000 {
b1000 #"
b1000 -"
b1000 1"
b1000 V"
b1000 ~"
b1000 &#
1s
#35
0s
#37
b0 z
b0 {
b0 #"
b0 -"
b0 1"
b0 V"
b0 ~"
b0 &#
b1 y
b1 ."
b1 (#
1s
#39
0s
#41
b1000011010001000100011 o
b1000011010001000100011 $"
b1000011010001000100011 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#43
0s
#45
b10 z
b10 {
b10 #"
b10 -"
b10 1"
b10 V"
b10 ~"
b10 &#
b10 "
b10 ,"
b10 ##
b111 G
b111 |
b111 3"
b111 Y"
b10 #
b10 +"
b10 \"
b11 $
b11 *"
b11 ["
b100 p
b100 ~
b100 '"
b100 2"
b100 '#
1s
#47
0s
#49
xN
xL
x%
b101 z
b101 {
b101 #"
b101 -"
b101 1"
b101 V"
b101 ~"
b101 &#
1s
#51
0s
#53
b1111 z
b1111 {
b1111 #"
b1111 -"
b1111 1"
b1111 V"
b1111 ~"
b1111 &#
b1 v
b1 ""
b1 0"
1s
#55
0s
#57
0N
1L
0%
b11 z
b11 {
b11 #"
b11 -"
b11 1"
b11 V"
b11 ~"
b11 &#
1s
#59
0s
#61
b100 z
b100 {
b100 #"
b100 -"
b100 1"
b100 V"
b100 ~"
b100 &#
b1 !
b1 U"
b1 ]"
1s
#63
0s
#65
b110 z
b110 {
b110 #"
b110 -"
b110 1"
b110 V"
b110 ~"
b110 &#
1s
#67
0s
#69
b111 z
b111 {
b111 #"
b111 -"
b111 1"
b111 V"
b111 ~"
b111 &#
b111 m
b111 5"
1s
#71
0s
#73
b1000 z
b1000 {
b1000 #"
b1000 -"
b1000 1"
b1000 V"
b1000 ~"
b1000 &#
1s
#75
0s
#77
b0 z
b0 {
b0 #"
b0 -"
b0 1"
b0 V"
b0 ~"
b0 &#
b10 y
b10 ."
b10 (#
1s
#79
0s
#81
b1000000010100101000001010110011 o
b1000000010100101000001010110011 $"
b1000000010100101000001010110011 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#83
0s
#85
b10 z
b10 {
b10 #"
b10 -"
b10 1"
b10 V"
b10 ~"
b10 &#
b11 "
b11 ,"
b11 ##
b0 r
b0 %"
b0 !#
b101 I
b101 )"
b101 W"
b101 $
b101 *"
b101 ["
b0 G
b0 |
b0 3"
b0 Y"
b101 #
b101 +"
b101 \"
b100000 q
b100000 &"
b100000 "#
1s
#87
0s
#89
0u
0M
b110 x
b110 !"
b110 $#
xN
xL
x%
b101 z
b101 {
b101 #"
b101 -"
b101 1"
b101 V"
b101 ~"
b101 &#
1s
#91
0s
#93
b1111 z
b1111 {
b1111 #"
b1111 -"
b1111 1"
b1111 V"
b1111 ~"
b1111 &#
b0 v
b0 ""
b0 0"
1s
#95
0s
#97
0N
0L
1%
b11 z
b11 {
b11 #"
b11 -"
b11 1"
b11 V"
b11 ~"
b11 &#
1s
#99
0s
#101
b100 z
b100 {
b100 #"
b100 -"
b100 1"
b100 V"
b100 ~"
b100 &#
b0 !
b0 U"
b0 ]"
1s
#103
0s
#105
b110 z
b110 {
b110 #"
b110 -"
b110 1"
b110 V"
b110 ~"
b110 &#
1s
#107
0s
#109
b111 z
b111 {
b111 #"
b111 -"
b111 1"
b111 V"
b111 ~"
b111 &#
1s
#111
0s
#113
b1000 z
b1000 {
b1000 #"
b1000 -"
b1000 1"
b1000 V"
b1000 ~"
b1000 &#
1s
#115
0s
#117
b0 z
b0 {
b0 #"
b0 -"
b0 1"
b0 V"
b0 ~"
b0 &#
b11 y
b11 ."
b11 (#
1s
#119
0s
#121
b11000110100001100110011 o
b11000110100001100110011 $"
b11000110100001100110011 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#123
0s
#125
b10 z
b10 {
b10 #"
b10 -"
b10 1"
b10 V"
b10 ~"
b10 &#
b100 r
b100 %"
b100 !#
b110 I
b110 )"
b110 W"
b110 $
b110 *"
b110 ["
b110 #
b110 +"
b110 \"
b0 q
b0 &"
b0 "#
1s
#127
0s
#129
b100 x
b100 !"
b100 $#
xN
xL
x%
b101 z
b101 {
b101 #"
b101 -"
b101 1"
b101 V"
b101 ~"
b101 &#
1s
#131
0s
#133
b1111 z
b1111 {
b1111 #"
b1111 -"
b1111 1"
b1111 V"
b1111 ~"
b1111 &#
1s
#135
0s
#137
0N
0L
1%
b11 z
b11 {
b11 #"
b11 -"
b11 1"
b11 V"
b11 ~"
b11 &#
1s
#139
0s
#141
b100 z
b100 {
b100 #"
b100 -"
b100 1"
b100 V"
b100 ~"
b100 &#
1s
#143
0s
#145
b110 z
b110 {
b110 #"
b110 -"
b110 1"
b110 V"
b110 ~"
b110 &#
1s
#147
0s
#149
b111 z
b111 {
b111 #"
b111 -"
b111 1"
b111 V"
b111 ~"
b111 &#
1s
#151
0s
#153
b1000 z
b1000 {
b1000 #"
b1000 -"
b1000 1"
b1000 V"
b1000 ~"
b1000 &#
1s
#155
0s
#157
b0 z
b0 {
b0 #"
b0 -"
b0 1"
b0 V"
b0 ~"
b0 &#
b100 y
b100 ."
b100 (#
1s
#159
0s
#161
b101000101000001010010011 o
b101000101000001010010011 $"
b101000101000001010010011 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#163
0s
#165
b10 z
b10 {
b10 #"
b10 -"
b10 1"
b10 V"
b10 ~"
b10 &#
b1 "
b1 ,"
b1 ##
b1010 p
b1010 ~
b1010 '"
b1010 2"
b1010 '#
b0 r
b0 %"
b0 !#
b101 $
b101 *"
b101 ["
b101 I
b101 )"
b101 W"
1s
#167
0s
#169
1u
b11 x
b11 !"
b11 $#
xN
xL
x%
b101 z
b101 {
b101 #"
b101 -"
b101 1"
b101 V"
b101 ~"
b101 &#
1s
#171
0s
#173
b1111 z
b1111 {
b1111 #"
b1111 -"
b1111 1"
b1111 V"
b1111 ~"
b1111 &#
b1010 v
b1010 ""
b1010 0"
1s
#175
0s
#177
0N
0L
1%
b11 z
b11 {
b11 #"
b11 -"
b11 1"
b11 V"
b11 ~"
b11 &#
1s
#179
0s
#181
b100 z
b100 {
b100 #"
b100 -"
b100 1"
b100 V"
b100 ~"
b100 &#
b1010 !
b1010 U"
b1010 ]"
1s
#183
0s
#185
b110 z
b110 {
b110 #"
b110 -"
b110 1"
b110 V"
b110 ~"
b110 &#
1s
#187
0s
#189
b111 z
b111 {
b111 #"
b111 -"
b111 1"
b111 V"
b111 ~"
b111 &#
b1010 H
b1010 }
b1010 X"
1s
#191
0s
#193
b1010 *
b1010 y"
b1000 z
b1000 {
b1000 #"
b1000 -"
b1000 1"
b1000 V"
b1000 ~"
b1000 &#
1s
#195
0s
#197
b0 z
b0 {
b0 #"
b0 -"
b0 1"
b0 V"
b0 ~"
b0 &#
b101 y
b101 ."
b101 (#
1s
#199
0s
#201
b10101000101010000110011 o
b10101000101010000110011 $"
b10101000101010000110011 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#203
0s
#205
b10 z
b10 {
b10 #"
b10 -"
b10 1"
b10 V"
b10 ~"
b10 &#
b11 "
b11 ,"
b11 ##
b101 r
b101 %"
b101 !#
b1000 I
b1000 )"
b1000 W"
b111111111111 H
b111111111111 }
b111111111111 X"
b1000 $
b1000 *"
b1000 ["
b1010 G
b1010 |
b1010 3"
b1010 Y"
b101 #
b101 +"
b101 \"
1s
#207
0s
#209
0u
b101 x
b101 !"
b101 $#
xN
xL
x%
b101 z
b101 {
b101 #"
b101 -"
b101 1"
b101 V"
b101 ~"
b101 &#
1s
#211
0s
#213
b1111 z
b1111 {
b1111 #"
b1111 -"
b1111 1"
b1111 V"
b1111 ~"
b1111 &#
b11 v
b11 ""
b11 0"
1s
#215
0s
#217
0N
0L
1%
b11 z
b11 {
b11 #"
b11 -"
b11 1"
b11 V"
b11 ~"
b11 &#
1s
#219
0s
#221
b100 z
b100 {
b100 #"
b100 -"
b100 1"
b100 V"
b100 ~"
b100 &#
b11 !
b11 U"
b11 ]"
1s
#223
0s
#225
b110 z
b110 {
b110 #"
b110 -"
b110 1"
b110 V"
b110 ~"
b110 &#
1s
#227
0s
#229
b111 z
b111 {
b111 #"
b111 -"
b111 1"
b111 V"
b111 ~"
b111 &#
b11 H
b11 }
b11 X"
1s
#231
0s
#233
b11 '
b11 |"
b1000 z
b1000 {
b1000 #"
b1000 -"
b1000 1"
b1000 V"
b1000 ~"
b1000 &#
1s
#235
0s
#237
b0 z
b0 {
b0 #"
b0 -"
b0 1"
b0 V"
b0 ~"
b0 &#
b110 y
b110 ."
b110 (#
1s
#239
0s
#241
b10001100011 o
b10001100011 $"
b10001100011 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#243
0s
#245
b10 z
b10 {
b10 #"
b10 -"
b10 1"
b10 V"
b10 ~"
b10 &#
b110 "
b110 ,"
b110 ##
b0 r
b0 %"
b0 !#
b1 G
b1 |
b1 3"
b1 Y"
b0 #
b0 +"
b0 \"
b1 H
b1 }
b1 X"
b0 $
b0 *"
b0 ["
b1000 p
b1000 ~
b1000 '"
b1000 2"
b1000 '#
1s
#247
0s
#249
1u
1t
b110 x
b110 !"
b110 $#
xN
xL
x%
b101 z
b101 {
b101 #"
b101 -"
b101 1"
b101 V"
b101 ~"
b101 &#
1s
#251
0s
#253
b1111 z
b1111 {
b1111 #"
b1111 -"
b1111 1"
b1111 V"
b1111 ~"
b1111 &#
b0 v
b0 ""
b0 0"
1s
#255
0s
#257
0N
0L
0%
b11 z
b11 {
b11 #"
b11 -"
b11 1"
b11 V"
b11 ~"
b11 &#
1s
#259
0s
#261
b100 z
b100 {
b100 #"
b100 -"
b100 1"
b100 V"
b100 ~"
b100 &#
b0 !
b0 U"
b0 ]"
1s
#263
0s
#265
b110 z
b110 {
b110 #"
b110 -"
b110 1"
b110 V"
b110 ~"
b110 &#
1s
#267
0s
#269
1J
b111 z
b111 {
b111 #"
b111 -"
b111 1"
b111 V"
b111 ~"
b111 &#
1w
1s
#271
0s
#273
b1000 z
b1000 {
b1000 #"
b1000 -"
b1000 1"
b1000 V"
b1000 ~"
b1000 &#
1s
#275
0s
#277
b0 z
b0 {
b0 #"
b0 -"
b0 1"
b0 V"
b0 ~"
b0 &#
b1000 y
b1000 ."
b1000 (#
1s
#279
0s
#281
b0 o
b0 $"
b0 /"
b1 z
b1 {
b1 #"
b1 -"
b1 1"
b1 V"
b1 ~"
b1 &#
1s
#283
0s
#285
b1001 z
b1001 {
b1001 #"
b1001 -"
b1001 1"
b1001 V"
b1001 ~"
b1001 &#
b0 "
b0 ,"
b0 ##
b0 p
b0 ~
b0 '"
b0 2"
b0 '#
b0 I
b0 )"
b0 W"
1s
#287
0s
#289
1s
